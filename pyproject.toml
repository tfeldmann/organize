[tool.poetry]
name = "organize-tool"
version = "3.2.4"
description = "The file management automation tool"
packages = [{ include = "organize" }]
authors = ["Thomas Feldmann <mail@tfeldmann.de>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tfeldmann/organize"
documentation = "https://organize.readthedocs.io"
keywords = [
    "file",
    "management",
    "automation",
    "tool",
    "organization",
    "rules",
    "yaml",
]
classifiers = [
    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities",
]

[tool.poetry.scripts]
organize = "organize.cli:cli"

[tool.poetry.dependencies]
python = "^3.9"
arrow = "^1.3.0"
docopt-ng = "^0.9.0"
docx2txt = "^0.8"
ExifRead = "2.3.2"                                                        # Pinned: https://github.com/tfeldmann/organize/issues/267
Jinja2 = "^3.1.2"
macos-tags = { version = "^1.5.1", markers = "sys_platform == 'darwin'" }
natsort = "^8.4.0"
pdfminer-six = "^20231228"
platformdirs = "^4.0.0"
pydantic = "^2.3.0"
PyYAML = "^6.0"
rich = "^13.4.2"
Send2Trash = { version = "^1.8.2", extras = ["nativeLib"] }
simplematch = "^1.4"

# must be in main dependencies for readthedocs.
mkdocs = { version = "^1.5.3", optional = true }
mkdocs-autorefs = { version = "^0.5.0", optional = true }
mkdocs-include-markdown-plugin = { version = "^6.0.4", optional = true }
mkdocstrings = { version = "^0.24.0", extras = ["python"], optional = true }
markupsafe = { version = "2.0.1", optional = true }                          # Pinned: https://stackoverflow.com/q/72191560/300783

[tool.poetry.extras]
docs = [
    "mkdocs",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocstrings",
    "markupsafe",
]

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.0"
mypy = "^1.4.0"
pyfakefs = "^5.3.1"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
requests = "^2.31.0"
ruff = ">=0.3,<0.6"
types-PyYAML = "^6.0.12.10"

[tool.coverage.run]
source = ['organize']

[tool.coverage.report]
exclude_also = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.mypy]
python_version = "3.9"
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "schema",
    "simplematch",
    "appdirs",
    "send2trash",
    "exifread",
    "textract",
    "requests",
    "macos_tags",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["tests", "organize"]
norecursedirs = ["tests/todo", "organize/filters", ".configs"]
filterwarnings = ["ignore::DeprecationWarning"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
